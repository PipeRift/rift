name: windows-cicd

on: [push, pull_request]

jobs:
  Build:
    name: Build ${{ matrix.name }} (${{ matrix.build-type }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [MSVC, Clang]
        build-type: [Release, Debug]
        include:
          - name: MSVC
            compiler: msvc
            os: windows-latest
            cxx: cl
            cc: cl
          - name: Clang
            compiler: clang
            os: windows-latest
            cxx: clang-cl
            cc: clang-cl

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Init Submodules
        uses: snickerbockers/submodules-init@v4

      - name: Get CMake
        uses: lukka/get-cmake@latest

      - name: Restore artifacts, or setup vcpkg for building artifacts
        uses: lukka/run-vcpkg@v10
        id: runvcpkg
        with:
          vcpkgDirectory: '${{ github.workspace }}/Extern/vcpkg'

      - name: Cache LLVM and Clang
        if: matrix.compiler == 'clang'
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: ${{ runner.temp }}/llvm
          key: llvm-11.0
      - name: Install LLVM and Clang
        if: matrix.compiler == 'clang'
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "11.0"
          directory: ${{ runner.temp }}/llvm
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: Cache Build
        uses: actions/cache@v2
        with:
          path: Build
          key: windows-${{ matrix.compiler }}-${{ matrix.build-type }}-build-${{ secrets.VCACHE}}

      - name: Configure and Build
        uses: lukka/run-cmake@v3.3
        id: runcmake
        with:
          cmakeGenerator: 'Ninja'
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: 'CMakeLists.txt'
          cmakeBuildType: ${{ matrix.build-type }}
          cmakeAppendedArgs: -DCMAKE_C_COMPILER=${{ matrix.cc }} -DCMAKE_CXX_COMPILER=${{ matrix.cxx }}
          buildWithCMakeArgs: --config ${{ matrix.build-type }}
          buildDirectory: 'Build'

      - uses: actions/upload-artifact@v2
        # Only clang artifacts are stored
        if: ${{ matrix.compiler == 'msvc' && matrix.build-type == 'Release' }}
        with:
          name: windows-${{ matrix.compiler }}-build
          path: Build/Bin

      - name: Run Tests
        working-directory: ./Build
        run: ctest --output-on-failure -j2 -C ${{ matrix.build-type }}
